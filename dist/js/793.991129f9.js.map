{"version":3,"file":"js/793.991129f9.js","mappings":"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","sources":["webpack://component-library/./src/views/CountDownTimerCircleView.vue","webpack://component-library/./src/views/CountDownTimerCircleView.vue?c9ac"],"sourcesContent":["<template>\r\n  <div class=\"timer-circle__wrap\" v-if=\"show\">\r\n    <div\r\n      class=\"timer-circle__item\"\r\n      :class=\"\r\n        key == 'hours' && item.value == 0 ? 'timer-circle__item--hide' : ''\r\n      \"\r\n      v-for=\"(item, key) in sectors\"\r\n      :key=\"key\"\r\n    >\r\n      <div class=\"timer-circle__wrap-svg\">\r\n        <svg width=\"72\" height=\"72\" :key=\"item.value\">\r\n          <circle\r\n            class=\"timer-circle__svg-circle\"\r\n            r=\"30\"\r\n            fill=\"none\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            stroke=\"#c2c2c2\"\r\n            stroke-width=\"10\"\r\n            stroke-dasharray=\"189\"\r\n            stroke-dashoffset=\"0\"\r\n          ></circle>\r\n          <circle\r\n            class=\"timer-circle__svg-circle\"\r\n            r=\"30\"\r\n            fill=\"none\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            stroke=\"none\"\r\n            stroke-width=\"10\"\r\n            stroke-dasharray=\"189\"\r\n            stroke-dashoffset=\"0\"\r\n          >\r\n            <animate\r\n              :key=\"item.animateValuesStart\"\r\n              attributeName=\"stroke-dashoffset\"\r\n              :values=\"`${item.animateValuesStart};189;`\"\r\n              :dur=\"item.duration\"\r\n            />\r\n            <animate\r\n              attributeName=\"stroke\"\r\n              :values=\"\r\n                key == 'hours'\r\n                  ? '#0288d1'\r\n                  : key == 'minutes'\r\n                  ? '#29af00'\r\n                  : '#ffc400'\r\n              \"\r\n              :dur=\"item.duration\"\r\n            />\r\n          </circle>\r\n        </svg>\r\n      </div>\r\n      <div class=\"timer-circle__wrap-txt\">\r\n        <p class=\"timer-circle__txt-unit\">{{ item.unit }}</p>\r\n        <p class=\"timer-circle__txt-value\">{{ item.value }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"CountDownTimerCircleView\",\r\n  props: [\"runningTimeProp\"],\r\n  data() {\r\n    return {\r\n      IdInterval: null,\r\n      show: true,\r\n      runningTime: 7205, //time in seconds 18605/5h10m5s  7205/2h5s  86400/24h\r\n      sectors: {\r\n        hours: {\r\n          unit: \"hour\",\r\n          value: \"\",\r\n          duration: \"\",\r\n          animateValuesStart: 0,\r\n        },\r\n        minutes: {\r\n          unit: \"min\",\r\n          value: \"\",\r\n          duration: \"\",\r\n          animateValuesStart: 0,\r\n        },\r\n        seconds: {\r\n          unit: \"sec\",\r\n          value: \"\",\r\n          duration: \"\",\r\n          animateValuesStart: 0,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    if (this.runningTimeProp != undefined) {\r\n      this.runningTime = this.runningTimeProp;\r\n    }\r\n    this.countTime();\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.IdInterval);\r\n  },\r\n  methods: {\r\n    countTime() {\r\n      let checkRunningTime = this.runningTime / 3600;\r\n      if (\r\n        this.runningTime < 0 ||\r\n        checkRunningTime > 24 ||\r\n        typeof this.runningTime != \"number\"\r\n      ) {\r\n        this.show = false;\r\n        console.log(\r\n          \"requirements to running time: seconds, <24 hours, >0, type Number!!!!!!\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      let finalDate = new Date(Date.now() + this.runningTime * 1000);\r\n      let time = null;\r\n      let seconds = null;\r\n      let minutes = null;\r\n      let hours = null;\r\n\r\n      clearInterval(this.IdInterval);\r\n      let func = () => {\r\n        time = Date.parse(finalDate) - Date.parse(new Date());\r\n        hours = Math.floor((time / (1000 * 60 * 60)) % 24);\r\n        minutes = Math.floor((time / 1000 / 60) % 60);\r\n        seconds = Math.floor((time / 1000) % 60);        \r\n\r\n        if (time <= 0 || !time) {\r\n          console.log(\"end\");\r\n          seconds = 0;\r\n          this.sectors.seconds.value = (\"0\" + seconds).slice(-2);\r\n          this.sectors.seconds.animateValuesStart = 189;\r\n          clearInterval(this.IdInterval);\r\n        } else if (time > 0) {\r\n          this.sectors.hours.value = hours;\r\n          this.sectors.minutes.value = (\"0\" + minutes).slice(-2);\r\n          this.sectors.seconds.value = (\"0\" + seconds).slice(-2);\r\n\r\n          this.sectors.hours.duration = hours * 60 * 60 + \"s\";\r\n          this.sectors.minutes.duration = minutes * 60 + \"s\";\r\n          this.sectors.seconds.duration = seconds + \"s\";\r\n\r\n          this.sectors.hours.animateValuesStart = 189 - (189 * hours) / 24;\r\n          this.sectors.minutes.animateValuesStart =\r\n            189 - (189 * (minutes / 6)) / 10;\r\n          this.sectors.seconds.animateValuesStart =\r\n            189 - (189 * (seconds / 6)) / 10;\r\n        }\r\n      };\r\n      this.IdInterval = setInterval(func, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.timer-circle {\r\n  &__wrap {\r\n    display: flex;\r\n    gap: 18px;\r\n  }\r\n  &__item {\r\n    position: relative;\r\n    width: fit-content;\r\n    &--hide {\r\n      display: none;\r\n    }\r\n  }\r\n  &__wrap-svg {\r\n    line-height: 0;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    transform: rotate(-90deg);\r\n  }\r\n  &__wrap-txt {\r\n    line-height: 1;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n  }\r\n  &__txt-unit {\r\n    margin-bottom: 0;\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n  }\r\n  &__txt-value {\r\n    margin-bottom: 0;\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n  }\r\n  // &__svg-circle {\r\n  //   // animation: circle 5s infinite;\r\n  // }\r\n}\r\n\r\n// svg circle {\r\n//   width: 100%;\r\n//   height: 100%;\r\n// //   fill: none;\r\n//   stroke: #191919;\r\n//   stroke-width: 10;\r\n\r\n// }\r\n// svg circle:nth-child(2) {\r\n//   stroke-dasharray: 120;\r\n//   stroke-dashoffset: 120;\r\n//   stroke: #63E2FF;\r\n//   animation: circle 5s infinite;\r\n// }\r\n\r\n// @keyframes circle {\r\n//   100% {\r\n//     stroke-dashoffset: 0;\r\n//   }\r\n// }\r\n</style>","import { render } from \"./CountDownTimerCircleView.vue?vue&type=template&id=16fe4230&scoped=true\"\nimport script from \"./CountDownTimerCircleView.vue?vue&type=script&lang=js\"\nexport * from \"./CountDownTimerCircleView.vue?vue&type=script&lang=js\"\n\nimport \"./CountDownTimerCircleView.vue?vue&type=style&index=0&id=16fe4230&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\other\\\\components_library\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-16fe4230\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","r","fill","cx","cy","stroke","$data","_createElementBlock","_hoisted_1","_Fragment","item","key","value","_hoisted_2","width","height","_hoisted_3","_hoisted_4","animateValuesStart","attributeName","values","dur","duration","_hoisted_7","_hoisted_8","unit","_hoisted_9","name","props","data","IdInterval","show","runningTime","sectors","hours","minutes","seconds","created","undefined","this","runningTimeProp","countTime","destroyed","clearInterval","methods","checkRunningTime","console","log","finalDate","Date","now","time","func","parse","Math","floor","slice","setInterval","__exports__","render"],"sourceRoot":""}